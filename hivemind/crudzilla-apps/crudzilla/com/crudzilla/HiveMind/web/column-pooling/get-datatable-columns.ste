{"definition_id":"c56c21a4-abd2-411b-83b7-72a9b0d36509","last_refresh_timestamp":1400892734056,"postexecution_handlers":[],"definition":{"id":"c56c21a4-abd2-411b-83b7-72a9b0d36509","code":"import org.apache.commons.beanutils.LazyDynaBean;\nimport com.crudzilla.platform.Crudzilla;\nimport com.crudzilla.platform.util.CrudzillaUtil;\nimport com.crudzilla.platform.datasource.bean.DataSource;\nimport org.apache.commons.io.FileUtils;\nimport com.crudzilla.platform.datastatement.bean.DataStatementReference;\nimport net.sf.json.JSONObject;\n\n//String crudAppPath = caller.getArguments().get(\"crudAppPath\").toString();\nString assetBaseDir = assetBaseDir = (new File(crud.appBaseDir()+\"/\"+crudzilla.sysSettings().get(\"crudzilla_asset_base\")).getCanonicalPath());\nCrudzilla tempCrudEngine = new Crudzilla(assetBaseDir+\"/\"+crudAppPath);\n\n\n//this is an advanced use example for what is basically inter-app interaction\n//we'll load the actual crud file since you can't run a crud across apps.\nObject rawCrud = JSONObject.fromObject(FileUtils.readFileToString(new File(assetBaseDir+\"/com/crudzilla/HiveMind/web/column-pooling/get-datatable-columns.stm\")));\n//hack\nrawCrud.get(\"definition\").remove(\"dataSourcePath\");\nDataStatementReference ref = new DataStatementReference(rawCrud,crud);\n\n//load datasource object\nLazyDynaBean dataSourceBean = tempCrudEngine.execute(dataTableDataSource, CrudzillaUtil.newArgumentMap(tempCrudEngine,arguments),\"GET\",true, null);\nDataSource dataSource = new DataSource();            \ndataSource.setConfig(dataSourceBean);      \nref.getDataStatement().setDataSource(dataSource);\n\n\n//establish a base path for executing this crud, all relative crud calls will\n//be resolved relative to this base path\nref.setBasePath(\"/column-pooling/get-datatable-columns.stm\");\n\nObject newCallMap = CrudzillaUtil.newArgumentMap(tempCrudEngine,arguments);\nnewCallMap.put(\"dataTable\",dataTable);\n//run datastament in correct engine\ncrud.call(ref,arguments);\n//return tempCrudEngine.execute(ref,newCallMap,\"GET\",true, null);\n\n","name":"get-datatable-columns","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":null,"lastModifiedTimeStamp":"1400892733880"},"preexecution_handlers":[],"execution_parameters":[{"id":"fddd516b-94df-4fb6-90a1-3b28e30edc5d","definitionId":"c56c21a4-abd2-411b-83b7-72a9b0d36509","required":"no","name":"findAppTaxonomy","type":"crud","validationRegEx":"","defaultValue":"/taxonomy/find-category.ste","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"0"}],"reference_id":"9f709abd-5eea-4fc6-a392-cdcc991e959d","accesscontrols":[]}