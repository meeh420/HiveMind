{"definition_id":"c81db810-139a-4dba-a20d-e1ac56fdcbf3","last_refresh_timestamp":1383927976294,"postexecution_handlers":[],"definition":{"id":"c81db810-139a-4dba-a20d-e1ac56fdcbf3","code":"import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.io.File;\nimport net.sf.json.JSONObject;\nimport org.apache.commons.io.FileUtils;\nimport net.sf.json.JSONArray;\nimport net.sf.json.JSONNull;\nimport net.sf.json.JSONObject;\nimport java.util.Iterator;\nimport org.apache.commons.io.filefilter.FileFilterUtils;\nimport org.apache.commons.io.filefilter.HiddenFileFilter;\nimport org.apache.commons.io.filefilter.IOFileFilter;\n\n\nimport org.apache.lucene.analysis.Analyzer;\nimport org.apache.lucene.analysis.TokenStream;\nimport org.apache.lucene.analysis.standard.StandardAnalyzer;\n\nimport org.apache.lucene.search.IndexSearcher\nimport org.apache.lucene.index.DirectoryReader;\nimport org.apache.lucene.queryparser.classic.QueryParser;\nimport org.apache.lucene.index.Term;\nimport org.apache.lucene.search.WildcardQuery;\nimport org.apache.lucene.search.BooleanQuery;\nimport org.apache.lucene.search.BooleanClause;\n\nimport org.apache.lucene.search.IndexSearcher;\nimport org.apache.lucene.search.Query;\nimport org.apache.lucene.search.ScoreDoc;\nimport org.apache.lucene.search.TopDocs;\n\nimport org.apache.lucene.search.highlight.Highlighter;\nimport org.apache.lucene.search.highlight.InvalidTokenOffsetsException;\nimport org.apache.lucene.search.highlight.QueryScorer;\nimport org.apache.lucene.search.highlight.SimpleHTMLFormatter;\nimport org.apache.lucene.search.highlight.TextFragment;\nimport org.apache.lucene.search.highlight.TokenSources;\n\nimport org.apache.lucene.util.Version;\nimport org.apache.lucene.store.RAMDirectory;\nimport org.apache.lucene.store.Directory;\nimport org.apache.lucene.store.FSDirectory;\n\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.analysis.util.CharArraySet;\n\ndef highLight(){\n \n}\n\ndef runCrud(){\n    String assetBaseDir = (new File(crud.appBaseDir()+\"/\"+crudzilla.sysSettings().get(\"crudzilla_asset_base\")).getCanonicalPath());\n\n    Map  searchResult = new HashMap();\n    List resultSet = new ArrayList();  \n  \n    try{\n      Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_CURRENT,new CharArraySet(Version.LUCENE_CURRENT,0,false));\n    \n      Directory directory = FSDirectory.open(new File(assetBaseDir+\"/lucene-index\"));\n      // Now search the index:\n      DirectoryReader ireader = DirectoryReader.open(directory);\n      IndexSearcher isearcher = new IndexSearcher(ireader);\n      // Parse a simple query that searches for \"text\":\n      QueryParser parser = new QueryParser(Version.LUCENE_CURRENT, \"content\", analyzer);\n    \n      Query searchQuery = /*new WildcardQuery(new Term(\"content\",qstr));*/parser.parse(qstr);\n      Query pathQuery = /*parser.parse(relPath+\"*\");*/ new WildcardQuery(new Term(\"path\",relPath+\"*\"));\n    \n      Query combinedQuery = new BooleanQuery();\n      ((BooleanQuery)combinedQuery).add(pathQuery,BooleanClause.Occur.MUST);\n      ((BooleanQuery)combinedQuery).add(searchQuery,BooleanClause.Occur.MUST);\n    \n      ScoreDoc[] hits = isearcher.search(combinedQuery, null, 100).scoreDocs;\n      \n    \n      \n      Highlighter highlighter = new Highlighter(new SimpleHTMLFormatter(\"<span class=\\\"MatchedText\\\">\", \"<\/span>\"), new QueryScorer(searchQuery));\n      Highlighter codeHighlighter = new Highlighter(new SimpleHTMLFormatter(\"\", \"\"),new QueryScorer(searchQuery));\n                                                    \n      crud.logger().info(\"result count \"+hits.length);\n    \n  \n      // Iterate through the results:\n      for (int i = 0; i < hits.length; i++) {\n        Document hitDoc = isearcher.doc(hits[i].doc);\n        \n        boolean isCode =  Boolean.valueOf(hitDoc.get(\"is_code\").toString());\n        \n        String text =  hitDoc.get(\"content\");\n        StringBuilder textSnippet = new StringBuilder();\n        \n        \n        TokenStream tokenStream = TokenSources.getAnyTokenStream(isearcher.getIndexReader(), hits[i].doc, \"content\", analyzer);\n        TextFragment[] frag = (isCode?codeHighlighter:highlighter).getBestTextFragments(tokenStream, text, false, 4);\n        \n        for (int j = 0; j < frag.length; j++) {\n          if ((frag[j] != null) && (frag[j].getScore() > 0)) {\n            textSnippet.append((frag[j].toString()));\n          }\n        }\n        \n        Map result = new HashMap();\n        result.put(\"path\",hitDoc.get(\"path\"));\n        result.put(\"snippet\",textSnippet.toString());\n        result.put(\"is_code\",hitDoc.get(\"is_code\"));\n        result.put(\"type\",hitDoc.get(\"type\"));\n        //result.put(\"hit_count\",frag);\n        resultSet.add(result);\n        \n        //crud.logger().info(\"snippet:\"+textSnippet.toString());\n      }\n      ireader.close();  \n      directory.close();\n    }catch(Exception ex){\n      searchResult.put(\"exception\",ex.getMessage());\n    }\n  \t//crud.logger().info(\"return result count \"+resultSet.size());\n  \n    searchResult.put(\"query\",qstr);\n    searchResult.put(\"id\",search_id);\n    searchResult.put(\"results\",resultSet);\n    return searchResult;\n}\n\nreturn runCrud();","name":"search","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":"no","lastModifiedTimeStamp":"1383927974118"},"preexecution_handlers":[],"execution_parameters":[{"id":"a4be1c70-3608-4e25-b229-f43561d7f9a8","definitionId":"c81db810-139a-4dba-a20d-e1ac56fdcbf3","required":"no","name":"qstr","type":"string","validationRegEx":"","defaultValue":"","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"no","position":"0"},{"id":"173064d2-60ba-407f-a307-85b62837c146","definitionId":"c81db810-139a-4dba-a20d-e1ac56fdcbf3","required":"no","name":"search_id","type":"string","validationRegEx":"","defaultValue":":crudzilla_generate_uuid","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"yes","keepAliveCount":null,"isFinal":"yes","position":"1"}],"reference_id":"4f9696cb-2dac-490f-a2a8-ed19b4bd71fa","accesscontrols":[]}