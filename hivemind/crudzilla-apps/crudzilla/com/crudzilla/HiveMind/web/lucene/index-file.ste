{"definition_id":"53802d9f-7f0f-4102-934c-21472a9697df","last_refresh_timestamp":1393341574493,"postexecution_handlers":[],"definition":{"id":"53802d9f-7f0f-4102-934c-21472a9697df","code":"import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.io.File;\nimport net.sf.json.JSONObject;\nimport org.apache.commons.io.FileUtils;\nimport net.sf.json.JSONArray;\nimport net.sf.json.JSONNull;\nimport net.sf.json.JSONObject;\nimport java.util.Iterator;\nimport org.apache.commons.io.filefilter.FileFilterUtils;\nimport org.apache.commons.io.filefilter.HiddenFileFilter;\nimport org.apache.commons.io.filefilter.IOFileFilter;\nimport org.apache.lucene.document.Document;\nimport org.apache.lucene.document.Field;\nimport org.apache.lucene.document.TextField;\nimport org.apache.lucene.document.StringField;\nimport org.apache.lucene.document.Field.Store;\nimport org.apache.lucene.search.TermQuery;\nimport org.apache.lucene.search.ScoreDoc;\nimport org.apache.lucene.index.Term;\n\ndef runCrud(File file){  \n  \n    String[] crudExts = crudzilla.sysSettings().get(\"crudzilla_monitor_crud_changes\").get(\"crud_extensions\").toString().split(\",\");\n\tboolean isCrud = false;\n    for(String ext:crudExts){\n      if(file.getName().endsWith(ext)){\n        isCrud = true;\n        break;\n      }\n    }\n  \n    //remove from index if it is already indexed\n  \tiwriter.deleteDocuments(new TermQuery(new Term(\"path\",relPath)));  \n  \t\n    Document doc = new Document(); \n  \tdoc.add(new StringField(\"path\",relPath, Store.YES));\n    \n  \n    String content = FileUtils.readFileToString(file,\"utf-8\");\n   \n    \n  \tif(isCrud)\n    {\n    \tObject crudExecutable = JSONObject.fromObject(FileUtils.readFileToString(file,\"utf-8\")); \n\t\tString definitionId = crudExecutable.get(\"definition_id\");\n  \n    \tJSONObject defJSON = crudExecutable.get(\"definition\");  \n      \t//StringBuilder contentBuf = new StringBuilder();\n        //if(defJSON.has(\"code\")\n      \n        doc.add(new StringField(\"definition_id\", definitionId, Store.YES));\n        doc.add(new Field(\"content\", defJSON.toString(), TextField.TYPE_STORED));\n        doc.add(new StringField(\"is_crud\", \"true\", Store.YES));\n      \n      \tif(defJSON.get(\"crudType\").compareTo(\"scriptexecutor\") == 0){\n        \tdoc.add(new StringField(\"is_code\", \"true\", Store.YES));\n            doc.add(new StringField(\"type\", defJSON.get(\"type\"), Store.YES));        \n      \t}\n        else\n        if(defJSON.get(\"crudType\").compareTo(\"datastatement\") == 0){\n        \tdoc.add(new StringField(\"is_code\", \"true\", Store.YES));\n            doc.add(new StringField(\"type\", \"sql\", Store.YES));           \n        }\n      \telse\n        {\n        \tdoc.add(new StringField(\"is_code\", \"false\", Store.YES)); \n      \t}\n  \t}\n    else\n    {\n    \tdoc.add(new Field(\"content\", content, TextField.TYPE_STORED));\n        doc.add(new StringField(\"is_crud\", \"false\", Store.YES));\n      \n      \tif(file.getAbsolutePath().lastIndexOf(\".\") != -1){\n          \n          \tString ext = file.getAbsolutePath().substring(file.getAbsolutePath().lastIndexOf(\".\"));\n          \n          \tif(ext2Mime.get(ext) != null){\n        \t  doc.add(new StringField(\"is_code\", \"true\", Store.YES));\n              doc.add(new StringField(\"type\", ext2Mime.get(ext).mode, Store.YES));\n              doc.add(new StringField(\"mime\", ext2Mime.get(ext).mime, Store.YES));\n          \t}\n            else\n            {\n              doc.add(new StringField(\"is_code\", \"false\", Store.YES));\n            }\n        }\n      \telse\n        {\n         \tdoc.add(new StringField(\"is_code\", \"false\", Store.YES)); \n        }\n    }\n    iwriter.addDocument(doc);    \n}\n\nrunCrud(file);\n","name":"index-file","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"yes","requireAllIdentities":"no","lastModifiedTimeStamp":"1393341563074"},"preexecution_handlers":[],"execution_parameters":[],"reference_id":"0fa8dbe9-52dd-4b54-988d-c8d89f0ea2a8","accesscontrols":[]}