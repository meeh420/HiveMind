{"definition_id":"3c628d7e-3517-426a-8390-0d8b86fb0d56","last_refresh_timestamp":1393292458062,"postexecution_handlers":[],"definition":{"id":"3c628d7e-3517-426a-8390-0d8b86fb0d56","code":"import com.crudzilla.platform.Crudzilla;\nimport java.io.File;\nimport java.util.*;\nimport org.apache.commons.beanutils.LazyDynaBean;\nimport org.apache.commons.io.filefilter.FileFilterUtils;\nimport org.apache.commons.io.filefilter.HiddenFileFilter;\nimport org.apache.commons.io.filefilter.IOFileFilter;\nimport org.apache.commons.io.monitor.FileAlterationListener;\nimport org.apache.commons.io.monitor.FileAlterationMonitor;\nimport org.apache.commons.io.monitor.FileAlterationObserver;\n\ndef deWindowize(String path){\n   String normalizePath = path.replace(\"\\\\\",\"/\");   \n  \n   //remove windows drive letter part of the path\n   if(normalizePath.indexOf(':') != -1)\n      normalizePath = normalizePath.substring(normalizePath.indexOf(':')+1);  \n  \n   return normalizePath;\n}\n\n\ndef runCrud() {\n  final String assetBaseDir = (new File(crud.appBaseDir()+\"/\"+crudzilla.sysSettings().get(\"crudzilla_asset_base\")).getCanonicalPath());\n  \n  \n  FileAlterationMonitor luceneMonitor = (FileAlterationMonitor)crudzilla.sysSettings().get(\"lucene_index_monitor\");\n  if(luceneMonitor != null)\n  \tluceneMonitor.stop();\n  \n  \n  LazyDynaBean monitor = (LazyDynaBean)crud.call(\"config.ins\");\n  if(monitor.get(\"enable\").toString().compareTo(\"true\") == 0){\n    \n    String[] includedExts = monitor.get(\"include_extensions\").toString().split(\",\");\n    // Create a FileFilter\n    IOFileFilter directories = FileFilterUtils.and(FileFilterUtils.directoryFileFilter(),HiddenFileFilter.VISIBLE);\n    \n    List<IOFileFilter> includedFiles = new ArrayList<IOFileFilter>();\n    \n    for(String ext:includedExts){\n      includedFiles.add(FileFilterUtils.and(FileFilterUtils.fileFileFilter(),FileFilterUtils.suffixFileFilter(ext)));\n    }\n    \n    //or all the file extension filters\n    IOFileFilter includedFile = includedFiles.get(0);                    \n    for(int i=1;i<includedFiles.size();i++)\n    \tincludedFile = FileFilterUtils.or(includedFile,includedFiles.get(i));                    \n    \n    final IOFileFilter filter      = FileFilterUtils.or(directories, includedFile);\n    \n    final Crudzilla engine = crudzilla;\n    final String assetDir = assetBaseDir;\n    \n    // Create the File system observer and register File Listeners\n    FileAlterationObserver observer = new FileAlterationObserver(new File(assetDir), filter);                    \n    observer.addListener(new FileAlterationListener(){\n      \n      @Override\n      public void onStart(FileAlterationObserver fao) {\n        engine.logger().info(\"--indexer started--\");\n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      void doIndex(File file){\n        \n        \n        String absPath = /*deWindowize*/(file.getAbsolutePath());\n        \n        String relPath = absPath.substring(assetDir.length());\n        \n        engine.logger().info(\"performing index \"+relPath);\n        \n        Map arguments = new HashMap<String,Object>();\n        arguments.put(\"relPath\",relPath);\n        engine.execute(\"/lucene/perform-index.ste\",arguments,true,null);        \n      }\n      \n      @Override\n      public void onDirectoryCreate(File file) {\n        //_logger.info(\"updating crud cache due to directory create\");\n\t\tdoIndex(file);\n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onDirectoryChange(File file) {\n        //_logger.info(\"updating crud cache due to directory change\");\n        doIndex(file);                         \n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onDirectoryDelete(File file) {\n        //_logger.info(\"updating crud cache due to directory delete\");\n        doIndex(file);\n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onFileCreate(File file) {\n        //_logger.info(\"updating crud cache due to file create\");\n        doIndex(file);                 \n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onFileChange(File file) {\n        //_logger.info(\"updating crud cache due to file change\");\n        doIndex(file);                        \n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onFileDelete(File file) {\n        //_logger.info(\"updating crud cache due to file delete\");\n        doIndex(file);                        \n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n      }\n      \n      @Override\n      public void onStop(FileAlterationObserver fao) {\n        //throw new UnsupportedOperationException(\"Not supported yet.\");\n        engine.logger().info(\"--indexer stopped--\");\n      }                    \n    });\n    \n    long interval = Long.parseLong(monitor.get(\"interval\").toString());\n    luceneMonitor = new FileAlterationMonitor(interval,observer);\n    //luceneMonitor.setThreadFactory(java.util.concurrent.Executors./*defaultThreadFactory*/privilegedThreadFactory());\n    try\n    {\n      crud.logger().info(\"starting lucene index monitor \");\n      luceneMonitor.start();\n      crud.logger().info(\"started lucene index monitor \");\n      crudzilla.sysSettings().set(\"lucene_index_monitor\",luceneMonitor);\n      \n    }catch(Exception ex){\n      crud.logger().error(\"File Monitoring failed, lucene indexing would be disabled\",ex);\n    }\n  }\n}\n\ntry{\n\trunCrud();\n}catch(Exception e){\n  crud.logger().error(\"\",e);\n}","name":"start-lucene","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":"no","lastModifiedTimeStamp":"1393292448464"},"preexecution_handlers":[],"execution_parameters":[],"reference_id":"7b378b16-c197-45e5-bfef-aa5e608e4117","accesscontrols":[]}