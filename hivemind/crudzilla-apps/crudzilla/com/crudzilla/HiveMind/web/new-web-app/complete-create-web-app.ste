{"definition_id":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","last_refresh_timestamp":1400871600115,"postexecution_handlers":[],"definition":{"id":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","code":"import org.apache.commons.io.FileUtils;\nimport java.io.File;\n\nimport java.sql.ResultSet;\nimport java.sql.ResultSetMetaData;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport org.apache.commons.dbutils.QueryRunner;\nimport org.apache.commons.dbutils.ResultSetHandler;\nimport com.crudzilla.platform.Crudzilla;\nimport com.crudzilla.platform.util.CrudzillaUtil;\nimport net.sf.json.JSONArray;\nimport net.sf.json.JSONNull;\nimport net.sf.json.JSONObject;\n\n\ndef attachTransaction(c){\n  Object transaction  = httpRequest.getSession().getAttribute(\"crudzilla_transaction_object\");\n  \n  if(transaction != null){\n    c.getArguments().put(\"crudzilla_transaction_object\",transaction);\n    c.getArguments().put(\"crudzilla_transaction_\"+transaction.get(\"name\"),httpRequest.getSession().getAttribute(\"crudzilla_transaction_\"+transaction.get(\"name\")));\n    c.getArguments().put(\"crudzilla_transaction_action\",\"join\");\n  }\n  return c;\n}\n\ndef startTransactionOnly(){\n  Object transaction  = crud.call(\"/crudzilla-app-settings/transaction.ins\");  \n  \n  httpRequest.getSession().setAttribute(\"crudzilla_transaction_object\",transaction);  \n  httpRequest.getSession().setAttribute(\"crudzilla_transaction_action\",\"start_only\");\n  \n  arguments.put(\"crudzilla_transaction_object\",transaction);\n  arguments.put(\"crudzilla_transaction_action\",\"start_only\");\n  crud.call(\"/crudzilla-app-settings/transactor.stm\",arguments);  \n  \n  httpRequest.getSession().setAttribute(\"crudzilla_transaction_\"+transaction.get(\"name\"),arguments.get(\"crudzilla_transaction_\"+transaction.get(\"name\")));\n}\n\n\ndef commitTransactionOnly(){\n  Object transaction  = httpRequest.getSession().getAttribute(\"crudzilla_transaction_object\");\n  \n  if(transaction != null){\n    \n    attachTransaction(crud);\n    arguments.put(\"crudzilla_transaction_action\",\"commit_only\");\n    crud.call(\"/crudzilla-app-settings/transactor.stm\",arguments);\n    \n    httpRequest.getSession().removeAttribute(\"crudzilla_transaction_object\");  \n    httpRequest.getSession().removeAttribute(\"crudzilla_transaction_action\");      \n    httpRequest.getSession().removeAttribute(\"crudzilla_transaction_\"+transaction.get(\"name\"));\n    \n    arguments.remove(\"crudzilla_transaction_object\");\n    arguments.remove(\"crudzilla_transaction_\"+transaction.get(\"name\"));\n    arguments.remove(\"crudzilla_transaction_action\");    \n  }\n}\n\ndef runCrud(){\n  \n  //startTransactionOnly();\n  \n  //copy default system setting cruds\n  String newRelPath = relPath;\n  if(newRelPath.charAt(0) == '/')\n      newRelPath = newRelPath.substring(1);   \n  \n  String appName = relPath.split('/')[relPath.split('/').length-1];\n  String assetBaseDir = (new File(crud.appBaseDir()+\"/\"+crudzilla.sysSettings().get(\"crudzilla_asset_base\")).getCanonicalPath());\n  \n  boolean usingEmbededDB = false;\n  Object dataSourceConfig = null;\n  \n \n  \n  if(dataSource != null && !dataSource.isEmpty()){\n        \n    if(!dataSource.endsWith(\".ins\")){//assume embeded database needs to be created\n       dataSourceConfig = crud.call(\"/crudzilla-app-settings/crudzilla-crud-datasource.ins\");\n       dataSourceConfig.set(\"url\",\"jdbc:derby:\"+dataSource+\";create=true\");\n       usingEmbededDB = true;      \n      \n       //copy the datasource to the new app directory\n       FileUtils.copyFileToDirectory(new File(assetBaseDir+\"/com/crudzilla/HiveMind/web/crudzilla-app-settings/application-datasource.ins\"),new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings\"));\n      \n       //rename to standard name: application-datasource\n       //new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/crudzilla-crud-datasource.ins\")\n       //.renameTo(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"));      \n      \n       //check name in crud so crud to source works\n       //Object crudExecutable = JSONObject.fromObject(FileUtils.readFileToString(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"),\"utf-8\"));   \n       //crudExecutable.get(\"definition\").set(\"name\",\"application-datasource\");\n       //FileUtils.writeStringToFile(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"),crudExecutable.toString());      \n    }\n    else\n    {\n       //extract data source name\n       String dataSourceName = dataSource.substring(dataSource.lastIndexOf(\"/\")+1);\n      \n       //copy the datasource to the new app directory\n       FileUtils.copyFileToDirectory(new File(assetBaseDir+\"/\"+dataSource),new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings\"));\n      \n       //rename to standard name: application-datasource\n       new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/\"+dataSourceName)\n       .renameTo(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"));\n       \n       //check name in crud so crud to source works\n       Object crudExecutable = JSONObject.fromObject(FileUtils.readFileToString(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"),\"utf-8\"));   \n       crudExecutable.get(\"definition\").put(\"name\",\"application-datasource\");\n       FileUtils.writeStringToFile(new File(assetBaseDir+\"/\"+relPath+\"/web/crudzilla-app-settings/application-datasource.ins\"),crudExecutable.toString());\n      \n      \n       //run in the context of new app\n       dataSourceConfig = crud\n       .add(\"crudPath\",relPath+\"/web/crudzilla-app-settings/application-datasource.ins\")\n       .call(\"/crud-proxy/proxy.ste\");\n       //dataSourceConfig = crud.call(dataSource,arguments);\n    }\n    \n    \n    if(createAuthTables.compareTo(\"yes\") == 0){\n        java.sql.Connection conn = (java.sql.Connection)crud.add(\"dataSourceConfig\",dataSourceConfig).call(\"\"+crudzilla.sysSettings().get(\"crudzilla_datasource_connection_creator\"));\n        \n      \n        String dataBaseUrl\t  = \"\";\n        String dataBaseUserName = \"\";\n        String dataBasePassWord = \"\";  \n        \n        //create users table\n        if(dataSourceConfig.url.startsWith(\"jdbc:mysql\"))\n        \tnew QueryRunner().update(conn,createUsersTableMYSQL);\n        else\n        if(dataSourceConfig.url.startsWith(\"jdbc:derby\"))\n        \tnew QueryRunner().update(conn,createUsersTableDERBY);\n        else\n        if(dataSourceConfig.url.startsWith(\"jdbc:oracle\"))\n        \tnew QueryRunner().update(conn,createUsersTableORACLE);  \n        else\n        if(dataSourceConfig.url.startsWith(\"jdbc:postgresql\"))\n        \tnew QueryRunner().update(conn,createUsersTablePOSTGRESQL);           \n           \n           \n        //create roles table\n        new QueryRunner().update(conn,createRolesTable);\n        \n        //create user_roles table\n        new QueryRunner().update(conn,createUserRolesTable);\n        \n        //create user_profile table\n        new QueryRunner().update(conn,createUserProfileTable);      \n      \n        //insert default user login info      \n        new QueryRunner().update(conn,\"insert into roles values(1,'developer')\"); \n        new QueryRunner().update(conn,\"insert into users (user_name,pass_word,create_date) values('developer','developer',\"+createTime+\")\");\n        new QueryRunner().update(conn,\"insert into user_roles values(1,1)\");\n        new QueryRunner().update(conn,\"insert into user_profile (user_id) values(1)\"); \n    }\n  }\n  \n  \n  //Object path2IdMapping = crud.call(\"../taxonomy/path2id-cache.ins\");\n  /***\n  //copy platform dependencies\n  crud.add(\"fromCategory\",/*\"com/crudzilla/HiveMind/web/crudzilla-app-settings\"*\"crudzilla-platform\")\n  .add(\"parent_id\",path2IdMapping.get(\"com/crudzilla/HiveMind/web/crudzilla-platform\"))\n  .add(\"toCategory\",newRelPath+\"/web/crudzilla-platform\")\n  .call(copyAppTaxonomy);   \n  \n  \n  //copy default application settings\n  crud.add(\"fromCategory\",/*\"com/crudzilla/HiveMind/web/crudzilla-app-settings\"*\"crudzilla-app-settings\")\n  .add(\"parent_id\",path2IdMapping.get(\"com/crudzilla/HiveMind/web/crudzilla-app-settings\"))\n  .add(\"toCategory\",newRelPath+\"/web/crudzilla-app-settings\")\n  .call(copyAppTaxonomy);  \n  ***/\n  \n  //create crud source\n  crud\n  .add(\"relPath\",relPath+\"/web\")\n  .add(\"preserveIds\",\"false\")\n  .call(\"/crud-to-source/to-source.ste\");\n  \n  //set default settings based on information currently available\n  Object settingsTaxonomy = crud.add(\"createPath\",\"false\").add(\"taxonomyPath\",newRelPath+\"/web/crudzilla-app-settings/system-settings\").call(findAppTaxonomy);\n  \n  Object settingsCrud     = attachTransaction(crud.add(\"instantiator_id\",settingsTaxonomy.linkId)).call(getInstantiator).get(0);\n  attachTransaction(crud.add(\"definitionId\",settingsCrud.id)).add(\"name\",\"crudzilla_velocity_template_root\").add(\"defaultValue\",assetBaseDir+\"/\"+newRelPath+\"/web\").call(updateExecutionParameterByName);\n  attachTransaction(crud.add(\"definitionId\",settingsCrud.id)).add(\"name\",\"crudzilla_crud_home\").add(\"defaultValue\",assetBaseDir+\"/\"+newRelPath+\"/web\").call(updateExecutionParameterByName);\n  attachTransaction(crud.add(\"definitionId\",settingsCrud.id)).add(\"name\",\"crudzilla_static_file_base_dir\").add(\"defaultValue\",assetBaseDir+\"/\"+newRelPath+\"/web\").call(updateExecutionParameterByName);\n  attachTransaction(crud.add(\"definitionId\",settingsCrud.id)).add(\"name\",\"crudzilla_engine_startup_handler\").add(\"defaultValue\",\"/app-startup/on-crud-engine-startup.ste\").call(updateExecutionParameterByName);\n  attachTransaction(crud.add(\"definitionId\",settingsCrud.id)).add(\"name\",\"crudzilla_interceptor\").add(\"defaultValue\",\"\").call(updateExecutionParameterByName);\n  \n  //setup default datasource\n  \n  if(usingEmbededDB){\n  \tObject dataSourceTaxonomy = crud.add(\"createPath\",\"false\").add(\"taxonomyPath\",newRelPath+\"/web/crudzilla-app-settings/application-datasource\").call(findAppTaxonomy);\n  \tObject dataSourceCrud     = attachTransaction(crud.add(\"instantiator_id\",dataSourceTaxonomy.linkId)).call(getInstantiator).get(0);\n  \tattachTransaction(crud.add(\"definitionId\",dataSourceCrud.id).add(\"name\",\"name\")).add(\"defaultValue\",dataSource).call(updateExecutionParameterByName);\n    attachTransaction(crud.add(\"definitionId\",dataSourceCrud.id).add(\"name\",\"url\")).add(\"defaultValue\",\"jdbc:derby:\"+dataSource+\";create=true\").call(updateExecutionParameterByName);\n  }\n  /***\n  else\n  if(dataSourceConfig != null){\n      String dataSourceCrudPath = dataSource.substring(0,dataSource.lastIndexOf(\".ins\"));\n    \n  \t  crud.add(\"fromCategory\",dataSourceCrudPath)\n      .add(\"toCategory\",newRelPath+\"/web/crudzilla-app-settings\")\n      .call(copyAppTaxonomy); \n     \n      if(dataSourceCrudPath.lastIndexOf('/') != -1)\n          dataSourceCrudPath = dataSourceCrudPath.substring(dataSourceCrudPath.lastIndexOf('/')+1);\n      \n  \t  crud.add(\"definitionId\",settingsCrud.id).add(\"name\",\"crudzilla_default_datasource\").add(\"defaultValue\",dataSourceCrudPath+\".ins\").call(updateExecutionParameterByName);\n  }  \n  **/\n  /**\n  //copy cwab logging support\n  crud.add(\"fromCategory\",/*\"com/crudzilla/HiveMind/web/dev-logging\"*\"dev-logging\")\n      .add(\"parent_id\",path2IdMapping.get(\"com/crudzilla/HiveMind/web/dev-logging\"))\n      .add(\"toCategory\",newRelPath+\"/web/dev-logging\")\n      .call(copyAppTaxonomy);  \n  \n  \n  //copy startup cruds\n  crud.add(\"fromCategory\",/*\"com/crudzilla/HiveMind/web/start-up/on-crud-engine-startup\"*\"start-up/on-crud-engine-startup\")\n      .add(\"parent_id\",path2IdMapping.get(\"com/crudzilla/HiveMind/web/start-up\"))\n      .add(\"toCategory\",newRelPath+\"/web/start-up\")\n      .call(copyAppTaxonomy); \n  \n  \n  //copy user-profile setup\n  crud.add(\"fromCategory\",/*\"com/crudzilla/HiveMind/web/start-up/user-profile\"*\"start-up/user-profile\")\n      .add(\"parent_id\",path2IdMapping.get(\"com/crudzilla/HiveMind/web/start-up\"))\n      .add(\"toCategory\",newRelPath+\"/web/start-up/user-profile\")\n      .call(copyAppTaxonomy); \n  **/\n  \n  //set default logging config\n  Object logConfigTaxonomy = crud.add(\"createPath\",\"false\").add(\"taxonomyPath\",newRelPath+\"/web/dev-logging/config\").call(findAppTaxonomy);\n  Object logConfigCrud     = attachTransaction(crud.add(\"instantiator_id\",logConfigTaxonomy.linkId)).call(getInstantiator).get(0);\n  attachTransaction(crud.add(\"definitionId\",logConfigCrud.id)).add(\"name\",\"classes\").add(\"defaultValue\",\"/dev-logging/classes/class-list.ins\").call(updateExecutionParameterByName);\n  attachTransaction(crud.add(\"definitionId\",logConfigCrud.id)).add(\"name\",\"name\").add(\"defaultValue\",appName+\"-logger\").call(updateExecutionParameterByName);\n  \n  \n  //bake app\n  crud.add(\"relPath\",\"/\"+newRelPath+\"/web\").call(bakeCrud);\n  \n  //commitTransactionOnly();\n}\n\nrunCrud();","name":"complete-create-web-app","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":"no","lastModifiedTimeStamp":"1400871599151"},"preexecution_handlers":[],"execution_parameters":[{"id":"553b01ac-63d5-4fa4-a67a-72182e3d3a93","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"updateExecutionParameterByName","type":"string","validationRegEx":"","defaultValue":"/api/nvp-processing/update-execution-parameter-value-by-name.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"0"},{"id":"940f4443-3ab2-4779-bf85-eb07a18db301","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"copyAppTaxonomy","type":"string","validationRegEx":"","defaultValue":"/taxonomy/copy-taxonomy-category.ste","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"1"},{"id":"9127c435-0b0b-47a1-a8fc-858647fecf6b","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"no","name":"createUsersTablePOSTGRESQL","type":"sql","validationRegEx":"","defaultValue":"create table users (       \n  id SERIAL,                         \n  user_name varchar(100) not null,                         \n  pass_word varchar(20) not null,                    \n  create_date bigint)","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"10"},{"id":"4cc30792-162d-4094-95b2-6c09893f7340","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"createUserProfileTable","type":"sql","validationRegEx":"","defaultValue":"create table user_profile (  user_id integer NOT NULL,  full_name varchar(256),  contact_email_address varchar(256),  phone_number varchar(16))","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"11"},{"id":"56d1c556-6055-4c05-810e-f42394577b43","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"no","name":"createTime","type":"string","validationRegEx":"","defaultValue":":crudzilla_current_timestamp","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"yes","keepAliveCount":null,"isFinal":"yes","position":"12"},{"id":"61d446a7-a8a7-42a5-a51f-628154b080f1","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"bakeCrud","type":"string","validationRegEx":"","defaultValue":"/taxonomy/bake-crud.ste","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"2"},{"id":"18d6cf34-9c90-4202-9cef-d4eae71bf0f5","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"getInstantiator","type":"string","validationRegEx":"","defaultValue":"/api/datastatements/get-instantiator.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"3"},{"id":"aa1693e5-ab33-4d2e-858f-a66c8f0add4e","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"findAppTaxonomy","type":"string","validationRegEx":"","defaultValue":"/taxonomy/find-category.ste","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"4"},{"id":"b7195e9f-e819-4292-a877-7cb857ec0129","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"createUserRolesTable","type":"string","validationRegEx":"","defaultValue":"create table user_roles(     user_id integer not null,     role_id integer not null)","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"5"},{"id":"317b1a9d-ab0c-4985-9155-0345211bea69","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"createRolesTable","type":"string","validationRegEx":"","defaultValue":"create table roles(     id integer,     role varchar(100) not null)","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"6"},{"id":"0ac6f8cf-5b0c-4d04-95c5-3e89cd5894f9","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"yes","name":"createUsersTableMYSQL","type":"sql","validationRegEx":"","defaultValue":"create table users (     \n  id integer auto_increment  PRIMARY KEY,     \n                    user_name varchar(100) not null,     \n                    pass_word varchar(20) not null,\n                    create_date bigint)","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"7"},{"id":"88114cf9-1b10-4dcf-aeb1-bd035db94f90","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"no","name":"createUsersTableORACLE","type":"sql","validationRegEx":"","defaultValue":"create table users ( id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY,\n                    user_name varchar(100) not null,                         \n                    pass_word varchar(20) not null,                    \n                    create_date bigint)\n                    ","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"8"},{"id":"1169cd73-672b-432d-8f6a-b5d2f673a449","definitionId":"205960fa-a1ae-48b2-b967-bb9ec3d3bd16","required":"no","name":"createUsersTableDERBY","type":"sql","validationRegEx":"","defaultValue":"create table users (       \n  id INT not null primary key\n        GENERATED ALWAYS AS IDENTITY\n        (START WITH 1, INCREMENT BY 1),                         \n  user_name varchar(100) not null,                         \n  pass_word varchar(20) not null,                    \n  create_date bigint)","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"9"}],"reference_id":"6bf10454-0435-48f3-90aa-74ee83eae2ab","accesscontrols":[]}