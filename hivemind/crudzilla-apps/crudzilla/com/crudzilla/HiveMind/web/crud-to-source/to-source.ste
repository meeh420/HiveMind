{"definition_id":"04de8375-e74a-4ae5-a08d-78258f504224","last_refresh_timestamp":1395279269104,"postexecution_handlers":[],"definition":{"id":"04de8375-e74a-4ae5-a08d-78258f504224","code":"import java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.io.File;\nimport net.sf.json.JSONObject;\nimport org.apache.commons.io.FileUtils;\nimport net.sf.json.JSONArray;\nimport net.sf.json.JSONNull;\nimport net.sf.json.JSONObject;\nimport java.util.Iterator;\nimport org.apache.commons.io.filefilter.FileFilterUtils;\nimport org.apache.commons.io.filefilter.HiddenFileFilter;\nimport org.apache.commons.io.filefilter.IOFileFilter;\n\ndef attachTransaction(c){\n  Object transaction  = httpRequest.getSession().getAttribute(\"crudzilla_transaction_object\");\n  \n  if(transaction != null){\n    c.getArguments().put(\"crudzilla_transaction_object\",transaction);\n    c.getArguments().put(\"crudzilla_transaction_\"+transaction.get(\"name\"),httpRequest.getSession().getAttribute(\"crudzilla_transaction_\"+transaction.get(\"name\")));\n    c.getArguments().put(\"crudzilla_transaction_action\",\"join\");\n  }\n  return c;\n}\n\ndef deWindowize(String path){\n   String normalizePath = path.replace(\"\\\\\",\"/\");   \n  \n   //remove windows drive letter part of the path\n   if(normalizePath.indexOf(':') != -1)\n      normalizePath = normalizePath.substring(normalizePath.indexOf(':')+1);  \n  \n   return normalizePath;\n}\n\ndef StringOrNull(Object obj){\n  if(obj == JSONNull.getInstance() || obj == null)\n  return null;\n  \n  return obj.toString();\n}\n\ndef createCrudDefinition(File cfile){\n    Object crudExecutable = JSONObject.fromObject(FileUtils.readFileToString(cfile,\"utf-8\")); \n  \n\tString definitionId = preserveIds.compareTo(\"true\")==0?crudExecutable.get(\"definition_id\"):java.util.UUID.randomUUID().toString();\n  \n    JSONObject defJSON = crudExecutable.get(\"definition\");\n  \n    \n    //add definition\n    Object crudWrapper = attachTransaction(crud\n    .add(\"id\",definitionId))\n    .add(\"name\",StringOrNull(defJSON.has(\"name\")?defJSON.get(\"name\"):null))\n    .add(\"description\",StringOrNull(defJSON.has(\"description\")?defJSON.get(\"description\"):null))\n    .add(\"server_side_only\",StringOrNull(defJSON.has(\"serverSideOnly\")?defJSON.get(\"serverSideOnly\"):null))\n    .add(\"require_all_identities\",StringOrNull(defJSON.has(\"requireAllIdentities\")?defJSON.get(\"requireAllIdentities\"):null))\n    .add(\"last_modified_timestamp\",StringOrNull(defJSON.has(\"lastModifiedTimeStamp\")?defJSON.get(\"lastModifiedTimeStamp\"):null))\n    .add(\"statement_type\",StringOrNull(defJSON.has(\"statementType\")?defJSON.get(\"statementType\"):null))\n    .add(\"sql_code\",StringOrNull(defJSON.has(\"sqlCode\")?defJSON.get(\"sqlCode\"):null))\n    .add(\"prepared_statement\",StringOrNull(defJSON.has(\"preparedStatement\")?defJSON.get(\"preparedStatement\"):null))\n    .add(\"prepared_statement_param_list\",StringOrNull(defJSON.has(\"preparedStatementParamList\")?defJSON.get(\"preparedStatementParamList\"):null))\n    .add(\"resultset_template\",StringOrNull(defJSON.has(\"resultSetTemplate\")?defJSON.get(\"resultSetTemplate\"):null))\n    .add(\"sql_dialect\",StringOrNull(defJSON.has(\"sqlDialect\")?defJSON.get(\"sqlDialect\"):null))\n    .add(\"datasource_path\",StringOrNull(defJSON.has(\"dataSourcePath\")?defJSON.get(\"dataSourcePath\"):null))\n    .add(\"datamodel_reference_path\",StringOrNull(defJSON.has(\"dataModelReferencePath\")?defJSON.get(\"dataModelReferencePath\"):null))\n    .add(\"code\",StringOrNull(defJSON.has(\"code\")?defJSON.get(\"code\"):null))\n    .add(\"crud_type\",StringOrNull(defJSON.has(\"crudType\")?defJSON.get(\"crudType\"):null))\n    .add(\"type\",StringOrNull(defJSON.has(\"type\")?defJSON.get(\"type\"):null))\n    .add(\"transaction_path\",StringOrNull(defJSON.has(\"transactionPath\")?defJSON.get(\"transactionPath\"):null))\n    .add(\"transaction_action\",StringOrNull(defJSON.has(\"transactionAction\")?defJSON.get(\"transactionAction\"):null))\n    .add(\"resultset_processor_path\",StringOrNull(defJSON.has(\"resultSetProcessorPath\")?defJSON.get(\"resultSetProcessorPath\"):null))\n    .add(\"sql_src_path\",StringOrNull(defJSON.has(\"sqlSrcPath\")?defJSON.get(\"sqlSrcPath\"):null));  \n    \n    \n    if(crudExecutable.has(\"type_definition\")){\n      JSONObject typeDefJSON = crudExecutable.get(\"type_definition\");\n      \n      crudWrapper\n      //.add(\"name\",StringOrNull(typeDefJSON.has(\"name\")?typeDefJSON.get(\"name\"):null))\n      .add(\"implementor_path\",StringOrNull(typeDefJSON.has(\"implementorPath\")?typeDefJSON.get(\"implementorPath\"):null))\n      .add(\"implementor_ref_type\",StringOrNull(typeDefJSON.has(\"implementorRefType\")?typeDefJSON.get(\"implementorRefType\"):null))\n      .add(\"initializer_path\",StringOrNull(typeDefJSON.has(\"initializerPath\")?typeDefJSON.get(\"initializerPath\"):null))\n      .add(\"post_validate_handler_path\",StringOrNull(typeDefJSON.has(\"postValidateHandlerPath\")?typeDefJSON.get(\"postValidateHandlerPath\"):null));    \n    }    \n    crudWrapper.call(addCrudDefinition);   \n    \n    \n    //add preexecution handler\n    JSONArray preExecutionHandlers = crudExecutable.getJSONArray(\"preexecution_handlers\");\n    Iterator itr = preExecutionHandlers.iterator();\n    while(itr.hasNext()){\n      \n      JSONObject h = (JSONObject)itr.next();\n      \n      String id = preserveIds.compareTo(\"true\")==0?StringOrNull(h.get(\"id\")):java.util.UUID.randomUUID().toString();\n      \n      attachTransaction(crud\n      .add(\"definition_id\",definitionId))\n      .add(\"id\",id)\n      .add(\"parent_id\",\"0\")\n      .add(\"presibling_id\",\"0\")\n      .add(\"path\",StringOrNull(h.has(\"path\")?h.get(\"path\"):null))\n      .add(\"enable\",StringOrNull(h.get(\"enable\")))\n      .add(\"returnval_name\",StringOrNull(h.has(\"returnValName\")?h.get(\"returnValName\"):null))\n      .add(\"returnmode\",StringOrNull(h.has(\"returnMode\")?h.get(\"returnMode\"):null))\n      .add(\"only_proceedon_true\",StringOrNull(h.has(\"onlyProceedOnTrue\")?h.get(\"onlyProceedOnTrue\"):null))\n      .add(\"arg_propagation_list_path\",StringOrNull(h.has(\"argPropagationListPath\")?h.get(\"argPropagationListPath\"):null))\n      .add(\"arg_propagation_mode\",StringOrNull(h.has(\"argPropagationMode\")?h.get(\"argPropagationMode\"):null))\n      .add(\"exploded_prop_list\",StringOrNull(h.has(\"explodedListPath\")?h.get(\"explodedListPath\"):null))\n      .call(addPreExecutionHandler);\n    }\n    \n    \n    JSONArray postExecutionHandlers = crudExecutable.getJSONArray(\"postexecution_handlers\");\n    itr = postExecutionHandlers.iterator();\n    while(itr.hasNext()){\n      \n      JSONObject h = (JSONObject)itr.next();\n      \n      String id = preserveIds.compareTo(\"true\")==0?StringOrNull(h.get(\"id\")):java.util.UUID.randomUUID().toString();\n      \n      attachTransaction(crud\n      .add(\"definition_id\",definitionId))\n      .add(\"id\",id)\n      .add(\"parent_id\",\"0\")\n      .add(\"presibling_id\",\"0\")\n      .add(\"path\",StringOrNull(h.has(\"path\")?h.get(\"path\"):null))\n      .add(\"enable\",StringOrNull(h.get(\"enable\")))\n      .add(\"returnval_name\",StringOrNull(h.has(\"returnValName\")?h.get(\"returnValName\"):null))\n      .add(\"returnmode\",StringOrNull(h.has(\"returnMode\")?h.get(\"returnMode\"):null))\n      .add(\"primary_result_var_name\",StringOrNull(h.has(\"primaryResultVarName\")?h.get(\"primaryResultVarName\"):null))\n      .add(\"arg_propagation_list_path\",StringOrNull(h.has(\"argPropagationListPath\")?h.get(\"argPropagationListPath\"):null))\n      .add(\"arg_propagation_mode\",StringOrNull(h.has(\"argPropagationMode\")?h.get(\"argPropagationMode\"):null))\n      .add(\"exploded_prop_list\",StringOrNull(h.has(\"explodedListPath\")?h.get(\"explodedListPath\"):null))\n      .add(\"position\",StringOrNull(h.has(\"position\")?h.get(\"position\"):\"0\"))\n      .call(addPostExecutionHandler);\n    }\n    \n    \n    JSONArray executionParams = crudExecutable.getJSONArray(\"execution_parameters\");\n    itr = executionParams.iterator();\n    while(itr.hasNext()){\n      JSONObject param = (JSONObject)itr.next();\n      \n      String id = preserveIds.compareTo(\"true\")==0?StringOrNull(param.get(\"id\")):java.util.UUID.randomUUID().toString();\n      \n      attachTransaction(crud\n      .add(\"definition_id\",definitionId))\n      .add(\"id\",id)\n      .add(\"name\",StringOrNull(param.has(\"name\")?param.get(\"name\"):null))\n      .add(\"type\",StringOrNull(param.has(\"type\")?param.get(\"type\"):null))\n      .add(\"label\",StringOrNull(param.has(\"label\")?param.get(\"label\"):null))\n      .add(\"required\",StringOrNull(param.has(\"required\")?param.get(\"required\"):null))\n      .add(\"is_final\",StringOrNull(param.has(\"isFinal\")?param.get(\"isFinal\"):null))\n      .add(\"validation_regex\",StringOrNull(param.has(\"validationRegEx\")?param.get(\"validationRegEx\"):null))\n      .add(\"default_value\",StringOrNull(param.has(\"defaultValue\")?param.get(\"defaultValue\"):null))\n      \n      .add(\"eval_left\",StringOrNull(param.has(\"evalLeft\")?param.get(\"evalLeft\"):null))\n      .add(\"eval_right\",StringOrNull(param.has(\"evalRight\")?param.get(\"evalRight\"):null))\n      .add(\"keep_alive_count\",StringOrNull(param.has(\"keepAliveCount\")?param.get(\"keepAliveCount\"):null))\n      \n      .add(\"max_length\",StringOrNull(param.has(\"maxLength\")?param.get(\"maxLength\"):null))\n      .add(\"min_length\",StringOrNull(param.has(\"minLength\")?param.get(\"minLength\"):null))\n      .add(\"line_end_length\",StringOrNull(param.has(\"lineEndLength\")?param.get(\"lineEndLength\"):null))\n      .add(\"max_range\",StringOrNull(param.has(\"maxRange\")?param.get(\"maxRange\"):null))\n      .add(\"min_range\",StringOrNull(param.has(\"minRange\")?param.get(\"minRange\"):null))\n      .add(\"date_format\",StringOrNull(param.has(\"dateFormat\")?param.get(\"dateFormat\"):null))\n      .add(\"date_format_strict\",StringOrNull(param.has(\"dateFormatStrict\")?param.get(\"dateFormatStrict\"):null))\n      .add(\"url_allowallschemes\",StringOrNull(param.has(\"allowallschemesForURL\")?param.get(\"allowallschemesForURL\"):null))\n      .add(\"url_allow2slashes\",StringOrNull(param.has(\"allow2slashesForURL\")?param.get(\"allow2slashesForURL\"):null))\n      .add(\"url_nofragments\",StringOrNull(param.has(\"nofragmentsForURL\")?param.get(\"nofragmentsForURL\"):null))\n      .add(\"url_schemes\",StringOrNull(param.has(\"schemesForURL\")?param.get(\"schemesForURL\"):null))\n      .add(\"position\",StringOrNull(param.has(\"position\")?param.get(\"position\"):\"0\"))\n      .call(addExecutionParameter);\n    }    \n    \n    \n    itr = crudExecutable.getJSONArray(\"accesscontrols\").iterator();\n    while(itr.hasNext()){\n      JSONObject accesscontrol = (JSONObject)itr.next(); \n      \n      String id = preserveIds.compareTo(\"true\")==0?StringOrNull(accesscontrol.get(\"id\")):java.util.UUID.randomUUID().toString();\n      \n      attachTransaction(crud\n      .add(\"definition_id\",definitionId))\n      .add(\"id\",id)\n      .add(\"user_identity\",StringOrNull(accesscontrol.has(\"userIdentity\")?accesscontrol.get(\"userIdentity\"):null))\n      .add(\"position\",StringOrNull(accesscontrol.has(\"position\")?accesscontrol.get(\"position\"):\"0\"))\n      .call(addAccessControl);      \n    }\n    \n  \n    return attachTransaction(crud.add(\"definition_id\",definitionId))\n  \t\t\t.call(getCrudDefinition);\n}\n\ndef createCrud(Object appTaxonomy,File file){\n  try{\n      Object definition = createCrudDefinition(file);\n  \n      if(appTaxonomy != null){\n        List items = attachTransaction(crud.add(\"parent_id\",appTaxonomy.id))\n        \t\t.call(getAppTaxonomies);\n        \n        Object lastItem = null;\n        Map preSiblings = new HashMap();\n        for(Object obj:items)\n           preSiblings.put(obj.preSiblingId,obj.preSiblingId);\n        \n        for(Object obj:items){\n          //if this obj's id isn't a presibling, it is the last item\n          if(preSiblings.get(obj.id) == null){\n            lastItem = obj;\n            break;\n          }\n        }\n        \n        //add to taxonomy\n        attachTransaction(crud\n        .add(\"apptaxonomy_id\",appTaxonomy.appTaxonomyId))\n        .add(\"parent_id\",appTaxonomy.id)\n        .add(\"presibling_id\",lastItem != null?lastItem.id:\"-1\")\n        .add(\"link_id\",definition.id)\n        .add(\"link_apptaxonomy_id\",\"-1\")\n        .add(\"type\",definition.crud_type)\n        .add(\"name\",definition.name)\n        .call(addAppTaxonomy);\n      }\n      else\n      {\n        //add to taxonomy\n        attachTransaction(crud\n        .add(\"apptaxonomy_id\",\"0\"))\n        .add(\"parent_id\",\"0\")\n        .add(\"presibling_id\",\"-1\")\n        .add(\"link_id\",definition.id)\n        .add(\"link_apptaxonomy_id\",\"-1\")\n        .add(\"type\",definition.crud_type)\n        .add(\"name\",definition.name)\n        .call(addAppTaxonomy);        \n      }    \n  }catch(Exception ex){}\n}\n\ndef runCrud(){\n\n      String assetBaseDir = new File(crud.appBaseDir()+\"/\"+crudzilla.sysSettings().get(\"crudzilla_asset_base\")).getCanonicalPath();\n      File crudFile = new File(assetBaseDir+\"/\"+relPath);\n      \n      if(crudFile.isFile()){\n        //get category if it exist otherwise create it\n        Object appTaxonomy = crud.add(\"createPath\",\"true\").add(\"type\",type)\n        .add(\"taxonomyPath\",deWindowize(new java.io.File(relPath.substring(0,relPath.lastIndexOf(\"/\"))).getCanonicalPath())).call(findAppTaxonomy);\n        \n        createCrud(appTaxonomy,crudFile);\n      }\n      else  \n      {\n        //get category if it exist otherwise create it\n        Object appTaxonomy = relPath.compareTo(\"/\") != 0 && !relPath.isEmpty()? crud.add(\"createPath\",\"true\").add(\"type\",type).add(\"taxonomyPath\",deWindowize(new java.io.File(relPath).getCanonicalPath())).call(findAppTaxonomy):null;\n        \n        \n        String[] crudExts = crudzilla.sysSettings().get(\"crudzilla_monitor_crud_changes\").get(\"crud_extensions\").toString().split(\",\");\n        // Create a FileFilter\n        IOFileFilter directories = FileFilterUtils.and(FileFilterUtils.directoryFileFilter(),HiddenFileFilter.VISIBLE);\n        \n        List<IOFileFilter> cruds = new ArrayList<IOFileFilter>();\n        \n        for(String ext:crudExts){\n          cruds.add(FileFilterUtils.and(FileFilterUtils.fileFileFilter(),FileFilterUtils.suffixFileFilter(ext)));\n        }\n        \n        //or all the file extension filters\n        IOFileFilter crudext = cruds.get(0);                    \n        for(int i=1;i<cruds.size();i++)\n        crudext = FileFilterUtils.or(crudext,cruds.get(i));                    \n        \n        final IOFileFilter filter      = FileFilterUtils.or(directories, crudext);      \n        \n        File[] files = FileFilterUtils.filter(filter,crudFile.listFiles());\n        \n        for(File file:files){\n          if(file.isFile())\n            createCrud(appTaxonomy,file);\n          else\n            crud.add(\"relPath\",relPath+\"/\"+file.getName())\n          \t.add(\"preserveIds\",preserveIds).call(\"to-source.ste\");\n        }\n      }\n  \n  \t  if(preserveIds.compareTo(\"true\") !=0){\n         if(crudFile.isFile() && relPath.lastIndexOf(\".\") != -1)\n         \trelPath = relPath.substring(0,relPath.lastIndexOf(\".\"));\n         \n      \t crud.add(\"relPath\",relPath).call(\"/taxonomy/bake-crud.ste\");\n      }\n}\n\nrunCrud();","name":"to-source","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":null,"lastModifiedTimeStamp":"1395279268498"},"preexecution_handlers":[],"execution_parameters":[{"id":"b3e65f5e-55e4-43df-9c55-c9b43078c7e8","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addCrudDefinition","type":"string","validationRegEx":"","defaultValue":"../api/primary-execution/crud-definition/add-crud-definition.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":"","isFinal":"yes","position":"0"},{"id":"99c53c87-b537-414c-b206-81e8b0151292","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addPreExecutionHandler","type":"string","validationRegEx":"","defaultValue":"../api/pre-execution/add-preexecution-handler-from-source.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"1"},{"id":"2c6e3674-f585-440a-bdd4-76876a9edd76","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"preserveIds","type":"string","validationRegEx":"","defaultValue":"true","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"no","position":"10"},{"id":"29cb40b7-a356-49f8-95ef-9c8b543e411b","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addPostExecutionHandler","type":"string","validationRegEx":"","defaultValue":"../api/post-execution/add-postexecution-handler-from-source.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"2"},{"id":"da3168e7-5c2e-47ac-b400-0a694c9c6b32","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addExecutionParameter","type":"string","validationRegEx":"","defaultValue":"../api/nvp-processing/add-execution-parameter-from-source.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"3"},{"id":"60b058ed-b82c-4d57-b368-57c5ce604eb0","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addAccessControl","type":"string","validationRegEx":"","defaultValue":"../api/access-control/add-accesscontrol-from-source.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"4"},{"id":"ce0fb0e7-38bb-4991-8b2d-71ffb59cc6c9","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"getAppTaxonomies","type":"string","validationRegEx":"","defaultValue":"../api/app-taxonomy/get-apptaxonomys.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":"","isFinal":"yes","position":"5"},{"id":"74d051cf-0e20-4143-9c27-e4a6bbba5dc7","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"addAppTaxonomy","type":"string","validationRegEx":"","defaultValue":"../api/app-taxonomy/add-apptaxonomy.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":"","isFinal":"yes","position":"6"},{"id":"112ddcac-36db-4866-9a8e-551621ac83a8","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"findAppTaxonomy","type":"string","validationRegEx":"","defaultValue":"../taxonomy/find-category.ste","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":"","isFinal":"yes","position":"7"},{"id":"1eb583f6-ac92-4e79-a2fe-885b0c085679","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"getCrudDefinition","type":"string","validationRegEx":"","defaultValue":"../api/primary-execution/crud-definition/get-crud-definition.stm","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"8"},{"id":"b0858e5c-c6aa-485a-8ed2-414b8f657a2b","definitionId":"04de8375-e74a-4ae5-a08d-78258f504224","required":"no","name":"type","type":"string","validationRegEx":"","defaultValue":"apptaxonomy-category","maxLength":"","minLength":"","lineEndLength":"","maxRange":"","minRange":"","dateFormat":"","dateFormatStrict":"no","allowallschemesForURL":"no","allow2slashesForURL":"no","nofragmentsForURL":"no","schemesForURL":"","evalLeft":"no","evalRight":"no","keepAliveCount":null,"isFinal":"yes","position":"9"}],"reference_id":"42a6bd16-d6d7-485d-9399-066d058a2d5f","accesscontrols":[]}