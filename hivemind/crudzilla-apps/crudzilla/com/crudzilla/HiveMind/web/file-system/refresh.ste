{"definition_id":"07fb7595-6210-49b7-860b-aef9c3e55bbc","last_refresh_timestamp":1380760442760,"postexecution_handlers":[],"definition":{"id":"07fb7595-6210-49b7-860b-aef9c3e55bbc","code":"import java.util.Map;\nimport java.util.HashMap;\nimport com.crudzilla.platform.util.CrudzillaUtil;\nimport java.io.File;\nimport java.io.Writer;\nimport java.io.FileNotFoundException;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport org.apache.commons.io.FileUtils;\nimport com.crudzilla.platform.util.AssetFSManager;\nimport net.sf.json.JSONObject;\n\n\n\ndef refreshDir(String fullPath,String relPath,int currentDepth,int depthLimit,String type){\n  \n  Map fileJSON = new HashMap();\n  File file = AssetFSManager.resolveToAssetBase(crudzilla,fullPath);\n  \n  \n  \n  fileJSON.put(\"name\",file.getName());\n  fileJSON.put(\"relPath\",relPath);\n  \n  \n  \n  //is this is a datastatement reference\n  if( (type.compareTo(\"all\") == 0 || type.compareTo(\"stm\") == 0) &&\n     file.getName().endsWith(\".stm\") ){ \n    String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".stm\");\n    fileJSON.put(\"mime\",\"stm\");\n    fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n  }\n  else\n    if( (type.compareTo(\"all\") == 0 || type.compareTo(\"ste\") == 0) &&\n       file.getName().endsWith(\".ste\")){\n      String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".ste\");\n      fileJSON.put(\"mime\",\"ste\");\n      fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n    }            \n  else\n    if( (type.compareTo(\"all\") == 0 || type.compareTo(\"esd\") == 0) && \n       file.getName().endsWith(\".esd\")){\n      String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".esd\");\n      fileJSON.put(\"mime\",\"esd\");\n      fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n    }        \n  else\n    if( (type.compareTo(\"all\") == 0 || type.compareTo(\"upl\") == 0) && \n       file.getName().endsWith(\".upl\")){\n      String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".upl\");\n      fileJSON.put(\"mime\",\"upl\");\n      fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n    }        \n  else\n    if( (type.compareTo(\"all\") == 0 || type.compareTo(\"svc\") == 0) && \n       file.getName().endsWith(\".svc\")){\n      String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".svc\");\n      fileJSON.put(\"mime\",\"svc\");\n      fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n    }        \n  else\n    if( (type.compareTo(\"all\") == 0 || type.compareTo(\"ins\") == 0) && \n       file.getName().endsWith(\".ins\")){\n      String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(\".ins\");\n      fileJSON.put(\"mime\",\"ins\");\n      fileJSON.put(\"refreshStatus\",refresh(fullPath,generatorPath));\n    } \n  \n  \n  fileJSON.put(\"isFolder\",file.isDirectory());\n  \n  if( file.isDirectory() && (depthLimit == -1 || depthLimit>currentDepth)){\n    List files = new ArrayList();\n    fileJSON.put(\"files\", files);\n    \n    String [ ] entries = file.list( );\n    \n    for( int j = 0; j < entries.length; j++ )\n    {\n      String relativePath = relPath.isEmpty()?entries[ j ]:relPath+ \"/\" + entries[ j ];\n      \n      Map subTree = refreshDir(fullPath+ \"/\" + entries[ j ],relativePath,currentDepth+1,depthLimit,type);                \n      files.add(subTree);\n    }\n    \n  }        \n  return fileJSON;\n}      \n\n\n\ndef refresh(String path,String generatorPath){\n  \n  try\n  {\n    File file = CrudzillaUtil.getFile(crudzilla,path);\n    JSONObject refFile = JSONObject.fromObject(FileUtils.readFileToString(file));\n    \n    String refId = refFile.getString(\"reference_id\");\n        \n    Map newRefFile = (Map)crud.add(\"definition_id\",refFile.getString(\"definition_id\"))\n    \t\t\t\t\t\t\t.call(generatorPath/*,arguments*/);\n    refFile.put(\"reference_id\", refId);\n    String ts    = newRefFile.get(\"last_refresh_timestamp\").toString();\n    \n    \n    JSONObject defJSON = JSONObject.fromObject(newRefFile);\n    defJSON.put(\"reference_id\", refId);\n    FileUtils.writeStringToFile(file, defJSON.toString());\n    \n    //**CoreDAO.updateDefinitionReferenceRefreshTS(caller,caller.getArguments(),refId, ts);\n    \n    \n    //serialize file based scripts to disk\n    crud.add(\"relPath\",path).add(\"crudExecutable\",defJSON).call(\"crud-to-code-file.ste\");\n    \n    //invalidate any cached version\n    crudzilla.inValidateCrudCache(file.getCanonicalPath());\n    \n    return refFile;\n  }catch(Exception ex){    \n    //throw ex;\n    crud.logger().error(\"Error refreshing reference file for \"+path,ex);\n    Map returnVal = new HashMap();\n    returnVal.put(\"status\", \"error\");\n    return returnVal;\n  }\n}    \n\ndef runCrud(){\n  File file = CrudzillaUtil.getFile(crudzilla,relPath);\n  \n  if(file.isDirectory()){\n    int depth = arguments.get(\"depth\") != null?Integer.parseInt(arguments.get(\"depth\")):-1;  \n    String actionPath = !relPath.isEmpty() && relPath.endsWith(\"/\") ?relPath.substring(0,relPath.length()-1):relPath;\n    //if(!actionPath.isEmpty())\n    //    actionPath = \"/\"+actionPath;\n    \n    crud.logger().info(\"refreshing :\"+actionPath);\n    return refreshDir(!actionPath.isEmpty()?\"/\"+actionPath:actionPath,actionPath, 0, depth, (arguments.get(\"mime\") != null?arguments.get(\"mime\"):\"all\"));    \n  }\n  else\n  {  \n    String ext = relPath.substring(relPath.lastIndexOf(\".\"));\n    String generatorPath = (String)((Map)crudzilla.sysSettings().get(\"crudzilla_crud_generator_paths\")).get(ext);\n    \n    return refresh(relPath,generatorPath);\n  }\n}\n\nreturn runCrud();\n","name":"refresh","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"no","requireAllIdentities":"no","lastModifiedTimeStamp":"1380760441854"},"preexecution_handlers":[],"execution_parameters":[],"reference_id":"e9140b6d-f5a8-4ff1-8446-f65f34d627fa","accesscontrols":[]}