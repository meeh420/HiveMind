{"definition_id":"f3abd6f5-1eb4-4e12-b63d-96c61c57f8ba","last_refresh_timestamp":1393271470968,"postexecution_handlers":[],"definition":{"id":"f3abd6f5-1eb4-4e12-b63d-96c61c57f8ba","code":"import java.util.Map;\nimport java.util.HashMap;\nimport com.crudzilla.platform.util.CrudzillaUtil;\nimport java.io.File;\nimport java.io.Writer;\nimport java.io.FileNotFoundException;\nimport java.io.BufferedWriter;\nimport java.io.FileWriter;\nimport org.apache.commons.io.FileUtils;\nimport net.sf.json.JSONObject;\n\ndef writeScriptToFile(String path/*,JSONObject crudExecutable*/){\n  File file = CrudzillaUtil.getFile(crudzilla,path);\n  \n  if(path.endsWith(\".ste\")){\n    if(crudExecutable.getJSONObject(\"definition\").has(\"type\")){\n      \n      String scriptPath = \"\";\n      if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n         compareTo(\"velocity-template-file\") == 0){\n        scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".vm\";\n      }\n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"groovy-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".groovy\";\n        }\n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"jruby-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".rb\";\n        }\n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"jython-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".py\";\n        }                    \n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"javascript-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".js\";\n        }\n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"scala-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".scala\";\n        }                 \n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"clojure-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".clj\";\n        }                 \n      else\n        if(crudExecutable.getJSONObject(\"definition\").getString(\"type\").\n           compareTo(\"jexl-file\") == 0){\n          scriptPath = file.getAbsolutePath().substring(0,file.getAbsolutePath().lastIndexOf(\".ste\"))+\".jexl\";\n        }                 \n      \n      \n      crud.logger().info(\"scriptPath:\"+scriptPath);\n      \n      //save to file\n      if(!scriptPath.isEmpty()){\n        File f = new File(scriptPath);\n        if(!f.exists())\n        f.createNewFile();\n        \n        FileUtils.writeStringToFile(f, crudExecutable.getJSONObject(\"definition\").getString(\"code\"));\n      }\n    }\n  }        \n}\n\ndef runCrud(){\n  \n  return writeScriptToFile(relPath/*,crudExecutable*/);\n}\n\nreturn runCrud();","name":"crud-to-code-file","description":"","crudType":"scriptexecutor","type":"groovy","serverSideOnly":"yes","requireAllIdentities":"no","lastModifiedTimeStamp":"1393271468045"},"preexecution_handlers":[],"execution_parameters":[],"reference_id":"6fca08f7-3932-4122-9aaa-ce350184c6b8","accesscontrols":[]}